{"name":"Currentjs","tagline":"Helps to automatically highlight current and active links in menu etc","body":"currentjs\r\n=========\r\n\r\nHelps to automatically highlight current and active links in menu etc `<li class=\"active\"><a href=\"#\" class=\"active\">current link</a></li>`\r\n\r\n\r\nUsage \r\n------\r\n\r\nJust call currentjs\r\n\r\n`\r\n$('.selector a').currentjs();\r\n`\r\n\r\n\r\nParameters\r\n-----\r\n\r\n`\r\n$('.selector a').currentjs(params);\r\n`\r\n\r\n**parentElement**: Do you want to add an active class to the parent elemnt? ex. `'li'`. default `false`  \r\n**classname**: The class name inserted to the active links. default `'active'`  \r\n**startonly**: In some cases you want to activate a link that only contains a part only of the url path. For example if your are at `http://yoursite.com/admin/user` you would like a link with href `/admin/` to be considered as active. Because you are in the admin area. default `false`  \r\n\r\n\r\nFull example\r\n-----\r\n\r\nLets say we have the following html code\r\n\r\n```\r\n<ul id=\"mysupernav\">\r\n  <li><a href=\"/\">Home</a></li>\r\n  <li><a href=\"/about\">About</a></li>\r\n  <li><a href=\"/contact\">Contact</a></li>\r\n</ul>\r\n```\r\n\r\nAnd that we are at ``http://yoursite.com/about``\r\nAnd you want to insert an active class named \"current\" at both the `a` and the `li` elements.\r\n\r\n\r\n```\r\n$('#mysupernav a').currentjs({\r\n  parentElement: 'li',\r\n  classname: 'current,\r\n  startonly: true\r\n});\r\n```\r\n\r\nNotes\r\n------\r\n\r\n- It works for both relative and absolute links\r\n- The current readme file took me more time than the actual code. So it should certainly needs some more work\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}